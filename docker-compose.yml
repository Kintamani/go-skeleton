version: '0.1'

services: 
  # PostgreSQL
  skeleton-db:
    image: kintamani/skeleton-db:latest
    container_name: skeleton-db
    restart: always
    build:
      context: .
      dockerfile: ./docker/configs/postgres/Dockerfile
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - ${DB_PORT_EXPOSE}:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ${DB_ENTRYPOINT_INITDB}/data:/var/lib/postgresql/data
      - ${DB_ENTRYPOINT_INITDB}/docker-entrypoint-initdb:/docker-entrypoint-initdb.d/
    networks:
      - skeleton-network

  # Golang Skeleton
  skeleton-golang:
    image: kintamani/skeleton-golang:latest
    container_name: skeleton-golang
    build:
      context: .
      dockerfile: ./docker/configs/go/Dockerfile
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_PORT=5432
      - GO111MODULE=on 
      - GOPATH=/go      
    ports:
      - ${APP_PORT}:${APP_PORT}
    volumes:
      - type: bind
        source: .
        target: /app
    depends_on:
      skeleton-db:
        condition: service_healthy
    networks:
      - skeleton-network

volumes:
  skeleton-db:
    driver: local
  skeleton-golang:
    name: skeleton-golang

networks:
  skeleton-network:
    name: skeleton-network
    driver: bridge